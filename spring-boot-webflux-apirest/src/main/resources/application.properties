# Con esta propiedad establecemos el nombre de nuestra aplicación para luego poder usarlo en el servidor de nombres Netflix Eureka y en el balanceador de carga
spring.application.name=servicio-productos
# Puerto donde va a ejecutar la aplicación en el servidor interno de Spring Boot
server.port: 8090
# Propiedad nuestra(no de SpringBoot) que indica la ruta donde se van a subir las imágenes
config.uploads.path=G://manuel//eclipse-workspace//SpringWebFlux//uploads//
# Con esta propiedad indicamos a este microservicio la url o path donde en encuentra el servidor Eureka de Netflix para su registro
# Se puede omitir si tanto los microservicios que se van a registrar como el servidor se encuentran en la misma máquina,pero normalmente siempre es mejor indicar esta propiedad
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# Propiedad que modifica la uri o dirección por defecto(Por defecto,se utiliza la colección "test" para almacenar los documentos) para conectarse a una base de datos en Mongodb(mongobd://host:puerto/nombre_bd).'spring_boot' es el nombre de la base datos(si no existe,se crea automáticamente)
spring.data.mongodb.uri: mongodb://localhost:27017/spring_boot
# Propiedad nuestra(no de SpringBoot) que indica la ruta base del controlador que se ejecuta actualmente en la aplicación.Tenemos dos controladores Api Rest en esta aplicación; uno(controlador con anotación @RestController) mapeado con la ruta base "/api/productos" y el otro(controlador que usa la técnica "Functional Endpoints") mapeado con la ruta base "/api/v2/productos"
config.base.endpoint=/api/v2/productos