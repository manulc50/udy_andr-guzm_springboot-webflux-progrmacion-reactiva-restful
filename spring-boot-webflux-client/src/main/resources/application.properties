# Con esta propiedad establecemos el nombre de nuestra aplicación para luego poder usarlo en el servidor de nombres Netflix Eureka y en el balanceador de carga
spring.application.name=servicio-cliente
# Puerto donde va a ejecutar la aplicación en el servidor interno de Spring Boot
server.port: 8091
# Con esta propiedad indicamos a este microservicio la url o path donde en encuentra el servidor Eureka de Netflix para su registro
# Se puede omitir si tanto los microservicios que se van a registrar como el servidor se encuentran en la misma máquina,pero normalmente siempre es mejor indicar esta propiedad
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# Propiedad nuestra(no de SpringBoot) que indica la ruta o path base donde se localiza nuestra Api Rest.Tenemos dos controladores Api Rest; uno(controlador con anotación @RestController) mapeado con la ruta base "/api/productos" y el otro(controlador que usa la técnica "Functional Endpoints") mapeado con la ruta base "/api/v2/productos"
# La url de abajo es sin usar un servidor de nombres como Eureka
# config.base.endpoint=http://localhost:8090/api/v2/productos
# Como actualmente estamos usando un servidor de nombres como Eureka para registrar los servicios,la nueva url es la de abajo(hacemos referencia a nuestra Api Rest a partir de su nombre,que es "servicio-productos", y no a partir de la máquina y puerto donde se encuentra desplegado,como se hacía antes)
config.base.endpoint=http://servicio-productos/api/v2/productos